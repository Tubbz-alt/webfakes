% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oauth.R
\name{oauth2.0}
\alias{oauth2.0}
\alias{oauth2_resource_app}
\alias{oauth2_resource_app,}
\alias{oauth2_third_party_app}
\title{OAuth 2.0}
\usage{
oauth2_resource_app(
  access_duration = 3600L,
  refresh_duration = 7200L,
  refresh = TRUE,
  seed = 42,
  stream = "stdout"
)

oauth2_third_party_app(name = "Third-Party app", stream = "stdout")
}
\arguments{
\item{access_duration}{After how many seconds should access tokens expire.}

\item{refresh_duration}{After how many seconds should refresh tokens expire
(ignored if \code{refresh} is \code{FALSE}).}

\item{refresh}{Should a refresh token be returned (logical).}

\item{seed}{Random seed used when creating tokens.}

\item{stream}{R connection to log to. \code{"stdout"} means the standard
output, \code{"stderr"} is the standard error. You can also supply a
connection object, but then you need to be sure that it will be
valid when the app is actually running.}

\item{name}{Name of the third-party app}
}
\value{
a \code{webfakes} app
}
\description{
The webfakes package comes with two fake apps that allow to imitate the
OAuth2.0 flow in your test cases. (See \href{https://aaronparecki.com/oauth-2-simplified/}{Aaron Pareckiâ€™s tutorial} for a good
introduction to OAuth2.0.) One app (\code{oauth2_resource_app()}) is the API
server that serves both as the resource and provides authorization.
\code{oauth2_third_party_app()} plays the role of the third-party app. They
are useful when testing or demonstrating code handling OAuth2.0
authorization, token caching, etc. in a package. The apps can be used in
your tests directly, or you could adapt one or both of them to better
mimic a particular OAuth2.0 flow.
}
\details{
For more details see \code{vignette("oauth", package = "webfakes")}.
}
\section{\code{oauth2_resource_app()}}{

App representing the API server (resource/authorization)
}

\section{\code{oauth2_third_party_app()}}{

App representing the third-party app
}

\seealso{
Other OAuth2.0 functions: 
\code{\link{oauth2_login}()}
}
\concept{OAuth2.0 functions}
